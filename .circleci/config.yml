version: 2.1

orbs:
  node: cloudify/public-unittest-orb@volatile #orb version
  wagonorb: cloudify/wagon-bulder-orb@volatile #orb version
  releaseorb: cloudify/release-orb@volatile #orb version
  managerorb: cloudify/manager-orb@volatile

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
        git submodule update --init --recursive
      fi

executors:

  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-2004:202201-02

commands:

  setup_manager:
    steps:
      - run: |
          if [[ -z "${CLOUDIFY_HOST}" ]]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TENANT}" ]]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TOKEN}" ]]; then
              exit 1
          fi
      - run: |
          response=$(curl --write-out '%{http_code}' --silent --insecure --header "Tenant: ${CLOUDIFY_TENANT}" --header "Authentication-Token: ${CLOUDIFY_TOKEN}" https://$CLOUDIFY_HOST/api/v3.1/status --output /dev/null)
          if [[ $response != 200 ]]; then
              echo "Failed to get manager status";
              exit 1
          fi
      - run: pip3 install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/refs/heads/master.zip
      - run: git submodule update --init --recursive --remote

  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-remote-test-manager -es aws_access_key_id=$aws_access_key_id -es aws_secret_access_key=$aws_secret_access_key -p $(find ~/project/workspace/build/ -name *centos-Core*x86_64.wgn)  ~/project/plugin.yaml

  run_blueprint:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/blueprint.yaml --test-id=hello-world-example --on-failure=uninstall-force --timeout=1800

jobs:

  integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - prepare_test_manager
      - run_blueprint

workflows:
  version: 2
  tests:
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - integration_tests_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - releaseorb/release:
          context: 
            - plugins-inputs
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - node/validate_version_job
            - node/validate_documentation_job
            - integration_tests_py3
      - releaseorb/merge_docs_job:
          context: 
            - plugins-inputs
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job
  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,1,3,5"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/validate_version_job
      - node/unittests_job:
          context: 
            - plugins-inputs
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - integration_tests_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
